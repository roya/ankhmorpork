apiVersion: secrets.mz.com/v1alpha1
kind: ConfigMapSecret
metadata:
  name: alertmanager-main
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  template:
    metadata:
      name: alertmanager-main
      labels:
        app: alertmanager
    data:
      alertmanager.yaml: |
        global:
          resolve_timeout: 5m
          slack_api_url: $(SLACK_API_URL)
          opsgenie_api_url: 'https://api.eu.opsgenie.com'
          opsgenie_api_key: $(OPSGENIE_API_KEY)
        receivers:

        - name: 'slack'
          slack_configs:
          - channel: '#alerts'
            send_resolved: true
            title: |
              [{{ .Status | toUpper -}}
                {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ if ne .Status "firing" -}}
                :heavy_check_mark:
                {{- else if eq .CommonLabels.severity "critical" -}}
                :fire:
                {{- else if eq .CommonLabels.severity "warning" -}}
                :warning:
                {{- else if eq .CommonLabels.severity "info" -}}
                :information_source:
                {{- else -}}
                :question:
              {{- end -}}
              {{ .CommonLabels.alertname }}
            text: >-
              {{ range .Alerts }}
                {{- if .Annotations.message }}
                  {{ .Annotations.message }}
                {{- end }}
                {{- if .Annotations.description }}
                  {{ .Annotations.description }}
                {{- end }}
              {{- end }}
            short_fields: true
            fields:
            - title: Severity
              value: '{{ .CommonLabels.severity }}'
            - title: Job
              value: '{{ .GroupLabels.job }}'
            actions:
            - type: button
              text: 'Runbook :green_book:'
              url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
            - type: button
              text: 'Query :mag:'
              url: '{{ (index .Alerts 0).GeneratorURL }}'
            - type: button
              text: 'Dashboard :grafana:'
              url: '{{ (index .Alerts 0).Annotations.dashboard_url }}'
            - type: button
              text: 'Silence :no_bell:'
              url: >-
                {{ .ExternalURL }}/#/silences/new?filter=%7B
                {{- range .CommonLabels.SortedPairs -}}
                    {{- if ne .Name "alertname" -}}
                        {{- .Name }}%3D%22{{- reReplaceAll " +" "%20" .Value -}}%22%2C%20
                    {{- end -}}
                {{- end -}}
                alertname%3D%22{{ reReplaceAll " +" "%20" .CommonLabels.alertname }}%22%7D
        - name: 'opsgenie'
          opsgenie_configs:
            - message: "{{ .GroupLabels.alertname }}"
              priority: >-
                {{- if ne .CommonLabels.priority "" -}}
                  {{- .CommonLabels.priority }}
                {{- else -}}
                  {{- if eq .CommonLabels.severity "critical" -}}
                  P2
                  {{- else -}}
                  P4
                  {{- end -}}
                {{- end -}}
              responders:
              - name: 'Main'
                type: team
        - name: 'healthchecks.io'
          webhook_configs:
            - send_resolved: false
              url: $(HEALTHCHECKS_URL)
        route:
          group_by: ['alertname', 'instance', 'job']
          #group_by: ['instance', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'slack'
          routes:
            - match:
                alertname: 'Watchdog'
              receiver: 'healthchecks.io'
              repeat_interval: 10m
            - match:
                severity: 'critical'
              receiver: 'opsgenie'
              continue: true
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match_re:
              severity: "warning|info"
            equal: ['namespace']
          - source_match:
              severity: "warning"
            target_match_re:
              severity: "info"
            equal: ['namespace']
          - source_match:
              alertname: 'ProbeFailed'
            target_match:
              alertname: 'StatusCode'
            equal: ['job', 'instance']
          - source_match:
              alertname: 'NodeDown'
            target_match:
              alertname: 'TargetDown'
            equal: ['job', 'instance']
          - source_match:
              alertname: 'FederatedPrometheusDown'
              instance: 'lancre.thaum.xyz:443'
            target_match_re:
              alertname: "TargetDown"
              instance: 'lancre.thaum.xyz:443|zmc.krupa.net.pl:443'
          - source_match:
              alertname: 'KubeNodeUnreachable'
            target_match_re:
              alertname: "TargetDown"
              job: "kubelet|node-exporter"
          - source_match:
              alertname: 'KubeNodeUnreachable'
            target_match:
              alertname: "KubeNodeNotReady"
  vars:
    - name: OPSGENIE_API_KEY
      secretValue:
        name: alertmanager-keys
        key: opsgenie_api_key
    - name: SLACK_API_URL
      secretValue:
        name: alertmanager-keys
        key: slack_api_url
    - name: HEALTHCHECKS_URL
      secretValue:
        name: alertmanager-keys
        key: healthchecks_url
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: alertmanager-keys
  namespace: monitoring
spec:
  encryptedData:
    healthchecks_url: AgBm6muAr5Upz3bGEu3ykXy2IRWM8sh0n22vy91T9HX1mBpG0NsREaXejjlWmovwariUf8LtCsKU3fPozPpOKudUFoqDWJxGlHhlrJlUZZY+oLR+oX56aJOYlWnCw6aIgH9zZv8NoZzDrsJb7MssSb/JKgVmh37gyYNGceKCV3YeozQeLvP2ANyPPqSJJICL9kk+aMy5os0wSQdWFvYY0t7zXc9WDO1SlQatA6J6zUfV5kl/5Wfkk39PSj72sQlkqwPPY/xwcH3OVfuEbHH0ajkQAk72KvkhNhSsdD8p9BHlR8/aJdgBVK6jR8tLNZqsYHhsD0+X7FL1Lxq90z78e+g6/CGtfFrb59qMExJ/ZcA9f1JHooQNjvsxN3xUyIj4Tzk2nEchEmdehzdcKSmwNvLgUgboTk7n7rbulzcuTDU0BYJkjbpe8W/V+92zaJF7+iwmDxpwO61tRkO0N4ONVEN5jlnuRS2SVOTN0zvtiIn3ImQH4Oy9mX9t6xo9XdmIYsta6rMIIA0PJr1ws2Tj/kCg/ClNdHYU6EN46O0v+jsQDNkaRVrgie1wyqOKYsO1+0jg7QQxGm7lU0dK0dkQ3tuFcW9zE6wpcoaRFFAWQxgTzJ8hByWn/t2ElvWNCGw1D/lKf75hG1QLXZ5oziEnksT3IV/kzgJ0SsWfnzkxL8emQ/vLBpf4jooUa2FT8rjZltVi4eb3DY/Nj0cDkfrDVFgEYho34VFhqCaQktDIGbrJuHTqau/zXHsdL+wHn/8Nuyi2Mkk/THeCJQ==
    opsgenie_api_key: AgCS2LpCTZpWfVM4S/4cJflYVwSHZSBSkQSqjIQhZMIuEp9flvkKmx9rmDRz2pdG/ph598M4SBtAM24H8vDGF3ffZuspUIx0NRMIrsp0mBi4mfizW4A5mavz9GicgrEjkQaR90qzGhMXWKhdlZ/lO8F720uoTohx+Ox5MfEKlJKVlZqxcPUzHN+S2ZEqLKYXXt5U91uI7jjkIHxOhg0EgAHUGH3nl9c37W7ipkfAVFC9M8PSBuR27YSQ1z98sq8/O9IPNNbMSWrQtj7kANzbU8K2lVhzxxWKU+u9P+XwJzWGkB5t2seQFxz55afpMoY+rRjpNYFANIGZWjMxVfmgZWJcq1YqnCnmGJLI3BKk1jkqC7FynVQH6MCnxMchUReL0u7W98V7UBUnHEFxTSyhy6peSlW7sX/7Ckh1Z01bKfWwHJrugmNBiWGIWr12s2ay7ER/jN18vy3gQauhCeas07Psld1aQe+pQMxMenUbSD8Tu6xb0jVXrih/U8+rEyXjkQPgcJsxfYl6SJo7pn38J/N8DyQY8qS/nla81ZKD/5CqZyoXqYIMgnvfHw05zuXlch3KawFl0BLVwCAru9JxBoDB5RnPoGc2qpjVRiU+LhFaCC5OjwMzeNVN6fPkC0tKin0Dfn40lg+PizWoLARgsThsjAs5/A2f5fp65xe0Zr8COh/VEKDWSsxmQ53es1lknOvYKg12nKWJpc9bl8UgosykYDxSg8eXnO4txNrqlBrRNqM8+QY=
    slack_api_url: AgAaaOZ8BhPOqKeQFQ8bX6Wqr1c+vGTf8R0Bl8KuA60MHHBvSBA5HPqiedXWaRIU7WxYztkHvMsrtZDJVZgdhGbpeuIZsxhGGw2AAz/oJcvsnZvIq47YewQgvuRD6rze9Dxf5VvVP9zydXLwMgXjGEFW97X0UWsmSHyFc3eORuo3ZE01yJSLezpJ0i1COMbz/lo6AyKJwrqkOGH9s9Pk6oh5s6Cc3amPCupEKU7tP8duWTUZp7SnIk58R0dqa6d5pF5HYUIhODEl1HZA7EltUicYQKnG82LT6CkmpRmpXK8PtmUhvAjq1SuqNgsN2z61jR06611G7rah6LN6t1NvCnrQu1yPuyNNd4fjWq+9uTI0CXyHl8jCnx8mk6kO2swJnwjw4gZy9kOWwFpDfkR+rpPISpmamTAY4WbO9YrTMVN0qosNOuAQ9U2nhOhN8lgUFx/Yw2i4kfFYvACHTTK2XjJGfTRlrDy34MVYjTTWQ3ZwsXa7afVU3gzxvEqIgkzOVdwyBwMk2Wns7khWVQcxvK9TkAKsTOmPhnX12niLjnftWfGWzBq3D0Ruv4Yr+kboHDRtJg9GmoxeKCOplBVs69s5d6sqxAyRwVTIGwCp29syJCFZ+NAhMQyUbT2bCjGoKNCn8/wDF/CaXHYfKnU3fDYwiC6sxXlrUrFloXu7FgXc2c3zPaHXE6Yq/JAj7OfSblGEL0SbREDyzuoUAV2xLJfhi8Xjs8Inm10g9BgHzNo1QZKMIagYh+GUfxOgfUhQt1VOXjcVyOcBi8GoHMHRfFonDlgkaNw3LRc7q48u7A==
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/managed: "true"
      creationTimestamp: null
      name: alertmanager-keys
      namespace: monitoring
    type: Opaque
