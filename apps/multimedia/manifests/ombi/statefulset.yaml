apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: ombi
    app.kubernetes.io/part-of: ombi
    app.kubernetes.io/version: 4.8.0
  name: ombi
  namespace: multimedia
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: ombi
      app.kubernetes.io/part-of: ombi
  serviceName: ombi
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: ombi
        app.kubernetes.io/part-of: ombi
        app.kubernetes.io/version: 4.8.0
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/Berlin
        image: linuxserver/ombi:4.8.0-development
        imagePullPolicy: IfNotPresent
        name: ombi
        ports:
        - containerPort: 3579
          name: http-ombi
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 10
          tcpSocket:
            port: http-ombi
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 10m
            memory: 250Mi
        startupProbe:
          tcpSocket:
            port: http-ombi
        volumeMounts:
        - mountPath: /config
          name: ombi-data
        - mountPath: /config/Logs
          name: logs
      restartPolicy: Always
      serviceAccountName: ombi
      volumes:
      - emptyDir: {}
        name: logs
  volumeClaimTemplates:
  - metadata:
      name: ombi-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 600Mi
      storageClassName: qnap-nfs-storage
