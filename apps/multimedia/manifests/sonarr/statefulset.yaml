---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
  namespace: multimedia
  labels:
    app.kubernetes.io/name: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  serviceName: sonarr
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: sonarr
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      containers:
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "Europe/Berlin"
        name: sonarr
        image: ghcr.io/linuxserver/sonarr:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8989
            name: http-sonarr
        readinessProbe:
          tcpSocket:
            port: http-sonarr
          failureThreshold: 5
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /config/logs
            name: logs
          - mountPath: /tv
            name: data
          - mountPath: /download/completed
            name: downloads
        resources:
          requests:
            cpu: 20m
            memory: 320Mi
      restartPolicy: Always
      volumes:
      - name: logs
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: tv
      - name: downloads
        persistentVolumeClaim:
          claimName: torrents
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config
      nodeSelector:
        kubernetes.io/arch: "amd64"
      tolerations: []
