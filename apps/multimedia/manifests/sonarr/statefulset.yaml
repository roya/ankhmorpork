apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: sonarr
  name: sonarr
  namespace: multimedia
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  serviceName: sonarr
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: sonarr
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      containers:
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: Europe/Berlin
        image: lscr.io/linuxserver/sonarr:develop
        imagePullPolicy: Always
        name: sonarr
        ports:
        - containerPort: 8989
          name: http-sonarr
        readinessProbe:
          failureThreshold: 5
          tcpSocket:
            port: http-sonarr
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 20m
            memory: 320Mi
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /tv
          name: data
        - mountPath: /download/completed
          name: downloads
        - mountPath: /backup
          name: backup
      - args:
        - exportarr
        - sonarr
        env:
        - name: CONFIG
          value: /sonarr/config.xml
        - name: URL
          value: http://localhost
        - name: PORT
          value: "9707"
        image: ghcr.io/onedr0p/exportarr:v0.6.2
        imagePullPolicy: IfNotPresent
        name: exportarr
        ports:
        - containerPort: 9707
          name: metrics
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: metrics
          periodSeconds: 10
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 1m
            memory: 11Mi
        volumeMounts:
        - mountPath: /sonarr
          name: config
          readOnly: true
      initContainers:
      - args:
        - -c
        - cd /config && unzip $(find /backup/scheduled -type f -exec stat -c '%n'
          {} + | sort -r | head -n1) && chown 1000:1000 /config/*
        command:
        - /bin/sh
        image: quay.io/paulfantom/rsync
        name: restore
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /backup
          name: backup
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        storage.infra/main: "true"
      restartPolicy: Always
      tolerations: []
      volumes:
      - emptyDir: {}
        name: config
      - name: data
        persistentVolumeClaim:
          claimName: tv
      - name: downloads
        persistentVolumeClaim:
          claimName: downloaded
      - name: backup
        persistentVolumeClaim:
          claimName: sonarr-config-backup
